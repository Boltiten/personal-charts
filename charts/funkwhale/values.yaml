# Default values for funkwhale.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
---
image:
  repository: funkwhale/funkwhale
  tag: 0.19.1
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: chart-example.local
  protocol: http

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

database:
  ## Database host
  host:

  ## Database port
  port: 5432

  ## Database user
  user: funkwhale

  ## Database password
  password:

  ## Database name
  database: funkwhale

redis:
  cluster:
    enabled: false
  master:
    persistence:
      enabled: false
  slave:
    persistence:
      enabled: false
  password: funkwhale
  redisPort: 6379

djangoSecret: ''

extraEnv: {}
  # LDAP_ENABLED: "True"
  # LDAP_ROOT_DN: dc=example,dc=com
  # LDAP_SEARCH_FILTER: (|(uid={0})(mail={0}))
  # LDAP_SERVER_URI: ldaps://ldap.example.com
  # LDAP_START_TLS: "True"
  # MEDIA_ROOT: /srv/funkwhale/data/media

extraSecret: {}
  # EMAIL_CONFIG: smtp://
  # DEFAULT_FROM_EMAIL: funkwhale@example.com

persistence:
  enabled: false
  # existingClaim: netbox-data
  # storageClass: "-"
  accessMode: ReadWriteMany
  size: 1Gi

s3:
  enabled: false
  proxy: true

  accessKey: ''
  secretKey: ''
  bucket: funkwhale
  # region: eu-west-2
  # location: /funkwhale
  # url: http://s3.example.com

api:
  # replicaCount: 1

  # Additional mounts to add to the API pod
  extraVolumeMounts: []
    # - name: extra-music-data
    #   mountPath: /srv/funkwhale/data/music
    #   readOnly: true
    #   existingClaim: volume-claim
  
  extraVolumes: []

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

front:
  # replicaCount: 1

  image:
    repository: nginx
    tag: stable
    pullPolicy: IfNotPresent

  # Additional mounts to add to the frontend pod
  extraVolumeMounts: []
    # - name: extra-music-data
    #   mountPath: /srv/funkwhale/data/music
    #   readOnly: true
    #   existingClaim: volume-claim

  extraVolumes: []

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

celery:
  beat:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 75Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}

  worker:
    replicaCount: 2

    # Additional mounts to add to the frontend pod
    extraVolumeMounts: []
      # - name: extra-music-data
      #   mountPath: /srv/funkwhale/data/music
      #   readOnly: true
      #   existingClaim: volume-claim

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}

