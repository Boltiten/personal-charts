---
# Default values for netbox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: netboxcommunity/netbox
  # tag:
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: chart-example.local
  # Can also be specified by entering rules directly;
  # rules:
  #   - host: chart-example.local
  #     paths:
  #       - path: /
  #         backend:
  #           serviceName: netbox-example
  #           servicePort: http

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  ## Set the name of the IngressClass cluster resource (optional)
  ## https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec
  # className: can-be-anything

postgresql:
  enabled: true

  postgresqlDatabase: netbox
  postgresqlUsername: netbox

  # The following variables are only used when internal PG is disabled
  # postgresqlHost: postgres
  # postgresqlPassword: postgres
  # postgresqlPort: 5432
  # When defined the `postgresqlPassword` field is ignored
  # existingSecret: secret-name
  # existingSecretKey: postgresql-password

redis:
  architecture: standalone
  auth:
    enabled: true
    # password: netbox

  master:
    persistence:
      enabled: false
    service:
      port: 6379

# NB; Not specifying a key or existing secret will cause it to regenerate on
# every upgrade
# djangoSecret: ''
# existingDjangoSecret: netbox-django-secret
# existingDjangoSecretKey: secret_key

extraEnv: {}
  # EMAIL_SERVER: localhost
  # EMAIL_PORT: 25
  # EMAIL_USERNAME: netbox
  # EMAIL_TIMEOUT: 5
  # EMAIL_FROM: netbox@example.com
  # NAPALM_USERNAME: ''
  # NAPALM_TIMEOUT: 10
  # MAX_PAGE_SIZE: 1000
  # WEBHOOKS_ENABLED: true

extraSecrets: {}
  # EMAIL_PASSWORD: netbox
  # NAPALM_PASSWORD: ''

superuser:
  name: ''
  email: ''
  apiToken: ''
  password: ''

resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 500m
  #   memory: 512Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumes: []

extraVolumeMounts: []
  # - name: extra-music-data
  #   mountPath: /srv/funkwhale/data/music
  #   readOnly: true
  #   existingClaim: volume-claim

persistence:
  enabled: false
  # existingClaim: netbox-data
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 10Gi

worker:
  enabled: true

  replicaCount: 1

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 150Mi
    # requests:
    #   cpu: 100m
    #   memory: 150Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

housekeeping:
  ## Netbox 3.0.0 and upwards need a housekeeping pod, if you're not using
  ## 3.0 then you may need to set this parameter
  enabled: true

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 32Mi
    # requests:
    #   cpu: 100m
    #   memory: 32Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

