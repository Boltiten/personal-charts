apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "netbox.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "netbox.name" . }}
    helm.sh/chart: {{ include "netbox.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    com.digitalocean.netbox/component: api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "netbox.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      com.digitalocean.netbox/component: api
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configuration.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "netbox.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        com.digitalocean.netbox/component: api
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "netbox.fullname" . }}
            - secretRef:
                name: {{ include "netbox.fullname" . }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: api
          #   initialDelaySeconds: 50
          #   failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: api
          ports:
            - name: api
              containerPort: 8001
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.persistence.enabled .Values.extraVolumeMounts }}
          volumeMounts:
            - name: netbox-static-files
              mountPath: /opt/netbox/netbox/static
            - name: netbox-config-files
              mountPath: /etc/netbox/config/gunicorn_config.py
              subPath: gunicorn_config.py
              readOnly: true
            - name: netbox-socket
              mountPath: /tmp/netbox
          {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /etc/netbox/media
          {{- end }}
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 10 }}
{{- end }}
          {{- end }}
            # - name: netbox-configuration
            #   path: /etc/netbox/config
            #   readOnly: true
            # - name: netbox-initializers
            #   path: /opt/netbox/initializers
            #   readOnly: true
            # - name: netbox-startup-scripts
            #   path: /opt/netbox/startup_scripts
            #   readOnly: true
            # - name: netbox-reports
            #   path: /opt/netbox/reports
            #   readOnly: true
        - name: nginx
          image: "nginx:alpine"
          imagePullPolicy: Always
          command:
            - nginx
            - -c
            - /etc/netbox-nginx/nginx.conf
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
            - name: netbox-config-files
              mountPath: /etc/netbox-nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: netbox-static-files
              mountPath: /opt/netbox/netbox/static
              readOnly: true
            - name: netbox-socket
              mountPath: /tmp/netbox
          # resources:
          #   limits:
          #     cpu: 125m
          #     memory: 50Mi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: netbox-config-files
          configMap:
            name: {{ .Chart.Name }}-config-files
        - name: netbox-static-files
          emptyDir: {}
        - name: netbox-socket
          emptyDir: {}
        # - name: netbox-configuration
        #   configMap:
        #     name: {{ .Chart.Name }}-configuration
        # - name: netbox-initializers
        #   configMap:
        #     name: {{ .Chart.Name }}-initializers
        # - name: netbox-reports
        #   configMap:
        #     name: {{ .Chart.Name }}-reports
        # - name: netbox-startup-scripts
        #   configMap:
        #     name: {{ .Chart.Name }}-startup-scripts
    {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "netbox.fullname" . }}
    {{- end }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
