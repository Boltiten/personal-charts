---
replicaCount: 1

image:
  repository: ghcr.io/voxpupuli/puppetboard
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## Will be generated if left empty
# secretKey:
# existingSecret:
# existingSecretKey: SECRET_KEY

## Connection information for accessing PuppetDB
puppetdb:
  host: puppetdb
  port: 8081

  ssl:
    key:
      # content: -----BEGIN RSA PRIVATE KEY-----...
      # existingSecret:
      existingSecretKey: PUPPETDB_KEY

      ## Set if mounted using extraVolumes/extraVolumeMounts
      # mounted: true
    cert:
      # content: -----BEGIN CERTIFICATE-----...
      # existingSecret:
      existingSecretKey: PUPPETDB_CERT

      ## Set if mounted using extraVolumes/extraVolumeMounts
      # mounted: true
    ## Will skip HTTPS validation if no CA cert is specified
    ca:
      # content: -----BEGIN CERTIFICATE-----...
      # existingSecret:
      existingSecretKey: PUPPETDB_SSL_VERIFY

      ## Set if mounted using extraVolumes/extraVolumeMounts
      # mounted: true

## Additional configuration endpoints
extraEnv: []
  # - name: ENABLE_CLASS
  #   value: "true"
  # - name: FAVORITE_ENVS
  #   valueFrom:
  #     configMapKeyRef:
  #       name: my-config
  #       key: favorite-envs
  # - name: CACHE_TYPE
  #   value: RedisCache
  ## E.g. for mounting certs using volumes
  # - name: PUPPETDB_CERT
  #   value: /etc/puppetdb-certs/cert.pem
extraEnvFrom: []
  # - configMapRef:
  #     name: my-config
extraSecrets: {}
  # CACHE_REDIS_PASSWORD: redis-password
extraVolumes: []
  # - name: certstore
  #   configMap:
  #     name: my-certs
extraVolumeMounts: []
  # - name: certstore
  #   mountPath: /etc/puppetdb-certs

serviceAccount:
  ## Specifies whether a service account should be created
  create: false
  ## Annotations to add to the service account
  annotations: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
